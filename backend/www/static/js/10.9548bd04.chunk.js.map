{"version":3,"sources":["components/SwitchItems/DealerDashboardMain.js","sounds/deletesound.mp3"],"names":["connect","state","user","userReducer","salesman","salesLoginReducer","dealer_leads","getDealerLeadReducer","leads","salesman_leads","getSalesLeadReducer","dealer_token","loginReducer","token","salesman_token","dealer_notifications","getDealerNotificationsReducer","notifications","salesman_notifications","getSalesmanNotificationReducer","getSalesmans","getDealerNotifications","getSalesmanNotifications","deleteDealerNotification","deleteSalesmanNotification","React","memo","props","socket","io","websocketUrl","transports","multiplex","query","useEffect","undefined","on","message","renderIcon","notification","title","path","mdiBadgeAccountAlertOutline","size","color","mdiCarConnected","mdiAccountPlusOutline","mdiDeleteAlertOutline","sound","Howl","src","deletesound","Howler","volume","className","to","onClick","leadsClick","data-icon","data-inline","map","idx","key","data","fromNow","ago","createdAt","id","play","delDealerNotif","delSalesmanNotif","module","exports"],"mappings":"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","file":"static/js/10.9548bd04.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { connect } from \"react-redux\";\nimport {\n  getSalesmans,\n  getDealerNotifications,\n  getSalesmanNotifications,\n  deleteDealerNotification,\n  deleteSalesmanNotification,\n} from \"../../actions/index\";\nimport { mdiDeleteAlertOutline } from \"@mdi/js\";\nimport { mdiBadgeAccountAlertOutline } from \"@mdi/js\";\nimport { mdiCarConnected } from \"@mdi/js\";\nimport { mdiAccountPlusOutline } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Moment from \"react-moment\";\nimport { Howl, Howler } from \"howler\";\nimport deletesound from \"../../sounds/deletesound.mp3\";\nimport { websocketUrl } from \"../../config\";\n\nimport io from \"socket.io-client\";\n\nconst DealerDashboardMain = (props) => {\n  // Coming from server ip address\n  const socket = io(websocketUrl, {\n    transports: [\"websocket\"],\n    multiplex: false,\n    query: `token=${\n      props.user === \"dealer\" ? props.dealer_token : props.salesman_token\n    }`,\n  });\n\n  useEffect(() => {\n    return props.user === \"dealer\" ? props.getDealerNotifications() : undefined;\n  }, []);\n\n  useEffect(() => {\n    return props.user === \"salesman\"\n      ? props.getSalesmanNotifications()\n      : undefined;\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      props.user === \"dealer\"\n        ? props.getDealerNotifications()\n        : props.getSalesmanNotifications();\n    });\n  }, [props.user === \"dealer\" ? props.dealer_leads : props.salesman_leads]);\n\n  const renderIcon = (notification) => {\n    if (notification.title === \"dealer_lead\") {\n      return (\n        <Icon path={mdiBadgeAccountAlertOutline} size={1.5} color=\"#39c\" />\n      );\n    } else if (notification.title === \"new_inventory_added\") {\n      return <Icon path={mdiCarConnected} size={1.5} color=\"#39c\" />;\n    } else if (notification.title === \"new_salesman\") {\n      return <Icon path={mdiAccountPlusOutline} size={1.5} color=\"#39c\" />;\n    } else if (notification.title === \"lead_deleted\") {\n      return <Icon path={mdiDeleteAlertOutline} size={1.5} color=\"#39c\" />;\n    } else if (notification.title === \"sales_lead\") {\n      return (\n        <Icon path={mdiBadgeAccountAlertOutline} size={1.5} color=\"#39c\" />\n      );\n    } else if (notification.title === \"lead_added\") {\n      return (\n        <Icon path={mdiBadgeAccountAlertOutline} size={1.5} color=\"#39c\" />\n      );\n    } else if (notification.title === \"new_inventory_deleted\") {\n      return <Icon path={mdiDeleteAlertOutline} size={1.5} color=\"#39c\" />;\n    } else if (notification.title === \"used_inventory_deleted\") {\n      return <Icon path={mdiDeleteAlertOutline} size={1.5} color=\"#39c\" />;\n    } else if (notification.title === \"used_inventory_added\") {\n      return <Icon path={mdiCarConnected} size={1.5} color=\"#39c\" />;\n    }\n  };\n\n  const sound = new Howl({\n    src: deletesound,\n  });\n\n  const delDealerNotif = (notification) => {\n    props.deleteDealerNotification(notification.id);\n    sound.play();\n  };\n\n  const delSalesmanNotif = (notification) => {\n    props.deleteSalesmanNotification(notification.id);\n    sound.play();\n  };\n\n  Howler.volume(0.5);\n\n  return (\n    <>\n      <div>\n        {/* ACTION AND RECENT ACTIVITY BOXES */}\n        <div className=\"console-recent-activity-container\">\n          {/* START CONSOLE */}\n          <div className=\"console\">\n            <h2\n              className={\n                \"console__heading \" +\n                (props.user === \"salesman\" ? \"sales_bb\" : \"dealer_bb\")\n              }\n            >\n              what would you like to do?\n            </h2>\n\n            <div className=\"console__controls\">\n              <Link\n                to={\n                  props.user === \"salesman\"\n                    ? \"/sales/dash/newlead\"\n                    : \"/dealer/dash/newlead\"\n                }\n                //to=\"/dealer/dash/newlead\"\n                className={\n                  \"console__control \" +\n                  (props.user === \"salesman\" ? \"sales_border\" : \"dealer_border\")\n                }\n                onClick={props.leadsClick}\n              >\n                <p>Add New Lead</p>\n              </Link>\n\n              {props.user === \"salesman\" ? null : (\n                <Link\n                  to=\"/dealer/dash/newsalesperson\"\n                  className={\n                    \"console__control \" +\n                    (props.user === \"salesman\"\n                      ? \"sales_border\"\n                      : \"dealer_border\")\n                  }\n                  //onClick={props.salesClick}\n                  onClick={() => getSalesmans()}\n                >\n                  <p>Add New Salesperson</p>\n                </Link>\n              )}\n\n              {/* {props.user === \"salesman\" ? null : (\n                <Link\n                  to=\"/dealer/dash/newmanager\"\n                  className={\n                    \"console__control \" +\n                    (props.user === \"salesman\"\n                      ? \"sales_border\"\n                      : \"dealer_border\")\n                  }\n                  onClick={props.managerClick}\n                >\n                  <p>Add New Manager</p>\n                </Link>\n              )} */}\n            </div>\n          </div>\n\n          {/* START RECENT ACTIVITY SECTION*/}\n          <div className=\"recent-activity\">\n            <h2\n              className={\n                \"recent-activity__heading \" +\n                (props.user === \"salesman\" ? \"sales_bb\" : \"dealer_bb\")\n              }\n            >\n              recent activity{\" \"}\n              <span\n                className={\n                  \"iconify recent-activity__help-icon \" +\n                  (props.user === \"salesman\"\n                    ? \"sales_help_icon\"\n                    : \"dealer_help_icon\")\n                }\n                data-icon=\"mdi:map-marker-question-outline\"\n                data-inline=\"false\"\n              ></span>\n            </h2>\n\n            {/* Start of Recent Activity List */}\n            <div className=\"recent-activity__items\">\n              {props.user === \"dealer\"\n                ? props.dealer_notifications.map((notification, idx) => {\n                    return (\n                      <div className=\"recent-activity__item\" key={idx}>\n                        <div className=\"recent-activity__item__box recent-activity__item__icon\">\n                          <span>{renderIcon(notification)}</span>\n                        </div>\n                        <div className=\"recent-activity__item__box recent-activity__item__text\">\n                          {notification.data.message}\n                        </div>\n                        <div className=\"recent-activity__item__time\">\n                          <Moment fromNow ago>\n                            {notification.createdAt}\n                          </Moment>{\" \"}\n                          ago\n                        </div>\n                        <CloseIcon\n                          onClick={() => delDealerNotif(notification)}\n                          className=\"notif-close-btn\"\n                        />\n                      </div>\n                    );\n                  })\n                : props.salesman_notifications.map((notification, idx) => {\n                    return (\n                      <div className=\"recent-activity__item\" key={idx}>\n                        <div className=\"recent-activity__item__box recent-activity__item__icon\">\n                          <span>{renderIcon(notification)}</span>\n                        </div>\n                        <div className=\"recent-activity__item__box recent-activity__item__text\">\n                          {notification.data.message}\n                        </div>\n                        <div className=\"recent-activity__item__time\">\n                          <Moment fromNow ago>\n                            {notification.createdAt}\n                          </Moment>{\" \"}\n                          ago\n                        </div>\n                        <CloseIcon\n                          onClick={() => delSalesmanNotif(notification)}\n                          className=\"notif-close-btn\"\n                        />\n                      </div>\n                    );\n                  })}\n            </div>\n            {/* END RECENT ACTIVITY */}\n\n            {/* END ACTION AND RECENT ACTIVITY BOXES */}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userReducer.user,\n    salesman: state.salesLoginReducer.user,\n    dealer_leads: state.getDealerLeadReducer.leads,\n    salesman_leads: state.getSalesLeadReducer.leads,\n    dealer_token: state.loginReducer.token || state.loginReducer.user.token,\n    salesman_token: state.salesLoginReducer.user.token,\n    dealer_notifications: state.getDealerNotificationsReducer.notifications,\n    salesman_notifications: state.getSalesmanNotificationReducer.notifications,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSalesmans,\n  getDealerNotifications,\n  getSalesmanNotifications,\n  deleteDealerNotification,\n  deleteSalesmanNotification,\n})(React.memo(DealerDashboardMain));\n","module.exports = __webpack_public_path__ + \"static/media/deletesound.06f599b9.mp3\";"],"sourceRoot":""}