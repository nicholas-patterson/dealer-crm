{"version":3,"sources":["components/SwitchItems/DealerAccountMain.js"],"names":["connect","state","dealer","loginReducer","user","dealer_email","dealer_username","errors","error","updateEmail","updatePassword","updateUsername","clearError","props","useState","dealer_password","personalInformation","setPersonalInformation","emailInformation","setEmailInformation","curent_password","new_password","confirm_new_password","passwordInformation","setPasswordInformation","handlePersonalInformationChange","e","target","name","value","handleEmailInformation","handlePasswordInformation","title","visibleTime","className","onSubmit","preventDefault","type","id","autoComplete","required","onChange","htmlFor","onClick","current_password"],"mappings":"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","file":"static/js/11.647f1424.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  updateEmail,\n  updatePassword,\n  updateUsername,\n  clearError,\n} from \"../../actions\";\nimport Banner from \"react-js-banner\";\nimport { Helmet } from \"react-helmet\";\n\nconst DealerAccountMain = (props) => {\n  const [personalInformation, setPersonalInformation] = useState({\n    dealer_username: props.dealer_username || \"\",\n    dealer_password: \"\",\n  });\n\n  const [emailInformation, setEmailInformation] = useState({\n    dealer_email: props.dealer || \"\",\n    dealer_password: \"\",\n  });\n\n  const [passwordInformation, setPasswordInformation] = useState({\n    curent_password: \"\",\n    new_password: \"\",\n    confirm_new_password: \"\",\n  });\n\n  const handlePersonalInformationChange = (e) => {\n    setPersonalInformation({\n      ...personalInformation,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handlePersonalInformationSection = (e) => {\n    e.preventDefault();\n    setPersonalInformation({ dealer_password: \"\" });\n  };\n\n  // handle change for email section\n  const handleEmailInformation = (e) => {\n    setEmailInformation({\n      ...emailInformation,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handle change for password section\n  const handlePasswordInformation = (e) => {\n    setPasswordInformation({\n      ...passwordInformation,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handle submit for email section\n  const handleEmailSection = (e) => {\n    e.preventDefault();\n    setEmailInformation({ dealer_password: \"\" });\n  };\n\n  // handle Submit for Password Section\n  const handlePasswordSection = (e) => {\n    e.preventDefault();\n    props.clearError();\n    setPasswordInformation({\n      current_password: \"\",\n      new_password: \"\",\n      confirm_new_password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Auto Acuity | Account</title>\n      </Helmet>\n      {props.errors ? <Banner title={props.errors} visibleTime={3000} /> : null}\n      <div>\n        <h2 className=\"pi-title\">My Details</h2>\n        <h4 className=\"pi-subtitle\">Personal Information</h4>\n\n        <div className=\"personal--information\">\n          <div className=\"personal--information__desc\">\n            <p>\n              Review and update any personal information that you find necessary\n              and then hit save.\n            </p>\n          </div>\n          <div className=\"personal--information__form-section\">\n            <form\n              className=\"personal--information__fields\"\n              onSubmit={handlePersonalInformationSection}\n            >\n              <div className=\"pi-field\">\n                <input\n                  type=\"text\"\n                  name=\"dealer_username\"\n                  id=\"username\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={personalInformation.dealer_username}\n                  onChange={handlePersonalInformationChange}\n                />\n                <label htmlFor=\"inputField\" className=\"pi-label-name\">\n                  <span className=\"pi-content-name\">Username</span>\n                </label>\n              </div>\n              <div className=\"pi-field\" id=\"last_name_grid_column\">\n                <input\n                  type=\"text\"\n                  name=\"dealer_password\"\n                  id=\"pass\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={personalInformation.dealer_password}\n                  onChange={handlePersonalInformationChange}\n                />\n                <label htmlFor=\"inputField\" className=\"pi-label-name\">\n                  <span className=\"pi-content-name\">Password</span>\n                </label>\n              </div>\n\n              <button\n                type=\"submit\"\n                onClick={() => props.updateUsername(personalInformation)}\n                className=\"pi-submitBtn\"\n              >\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n        <h4 className=\"ea-subtitle\">E-mail Address</h4>\n        <div className=\"email--address__information\">\n          <div className=\"email--address__desc\">\n            <p>\n              Review and update your email adress, Double check accuracy.\n              Password must be used for validation.\n            </p>\n          </div>\n          <div className=\"email--address__form-section\">\n            <form\n              className=\"email--address__fields\"\n              onSubmit={handleEmailSection}\n            >\n              <div className=\"ea-field\">\n                <input\n                  type=\"email\"\n                  name=\"dealer_email\"\n                  id=\"email\"\n                  className=\"ea-group\"\n                  autoComplete=\"off\"\n                  required\n                  value={emailInformation.dealer_email}\n                  onChange={handleEmailInformation}\n                />\n                <label htmlFor=\"inputField\" className=\"ea-label-name\">\n                  <span className=\"ea-content-name\">E-mail</span>\n                </label>\n              </div>\n              {/* User must type in correct password to update email */}\n              <div className=\"ea-field\">\n                <input\n                  type=\"password\"\n                  name=\"dealer_password\"\n                  id=\"password\"\n                  className=\"ea-group\"\n                  autoComplete=\"off\"\n                  required\n                  value={emailInformation.dealer_password}\n                  onChange={handleEmailInformation}\n                />\n                <label htmlFor=\"inputField\" className=\"ea-label-name\">\n                  <span className=\"ea-content-name\">Password</span>\n                </label>\n              </div>\n              <button\n                type=\"submit\"\n                onClick={() => props.updateEmail(emailInformation)}\n                className=\"ea-submitBtn\"\n              >\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n        <h4 className=\"pw-subtitle\">Password</h4>\n        <div className=\"password--information\">\n          <div className=\"password--information__desc\">\n            <p>\n              To change password, enter your current password and then your new\n              password; be sure to confirm your new password.\n            </p>\n          </div>\n          <div className=\"password--information__form-section\">\n            <form\n              onSubmit={handlePasswordSection}\n              className=\"password__information__fields\"\n            >\n              <div className=\"pw-field\">\n                <input\n                  type=\"password\"\n                  name=\"current_password\"\n                  id=\"current_password\"\n                  className=\"pw-group\"\n                  autoComplete=\"off\"\n                  required\n                  value={passwordInformation.current_password}\n                  onChange={handlePasswordInformation}\n                />\n                <label htmlFor=\"inputField\" className=\"pw-label-name\">\n                  <span className=\"pw-content-name\">Current Password</span>\n                </label>\n              </div>\n              <div className=\"pw-field\">\n                <input\n                  type=\"password\"\n                  name=\"new_password\"\n                  id=\"new_password\"\n                  className=\"pw-group\"\n                  autoComplete=\"off\"\n                  required\n                  value={passwordInformation.new_password}\n                  onChange={handlePasswordInformation}\n                />\n                <label htmlFor=\"inputField\" className=\"pw-label-name\">\n                  <span className=\"pw-content-name\">New Password</span>\n                </label>\n              </div>\n              <div className=\"pw-field\">\n                <input\n                  type=\"password\"\n                  name=\"confirm_new_password\"\n                  id=\"confirm_new_password\"\n                  className=\"pw-group\"\n                  autoComplete=\"off\"\n                  required\n                  value={passwordInformation.confirm_new_password}\n                  onChange={handlePasswordInformation}\n                />\n                <label htmlFor=\"inputField\" className=\"pw-label-name\">\n                  <span className=\"pw-content-name\"> Confirm Password</span>\n                </label>\n              </div>\n              <button\n                onClick={() => props.updatePassword(passwordInformation)}\n                type=\"submit\"\n                className=\"pw-submitBtn\"\n              >\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dealer: state.loginReducer.user.dealer_email,\n    dealer_username: state.loginReducer.user.dealer_username,\n    errors: state.loginReducer.error,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateEmail,\n  updatePassword,\n  updateUsername,\n  clearError,\n})(DealerAccountMain);\n"],"sourceRoot":""}