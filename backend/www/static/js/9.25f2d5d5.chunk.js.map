{"version":3,"sources":["sounds/addsound.mp3","components/SwitchItems/DealerNewInvSingle.js","components/SwitchItems/DealerUsedInvSingle.js","components/SwitchItems/DealerInventoryMain.js","components/Portal.js","sounds/deletesound.mp3"],"names":["module","exports","React","memo","inv","idx","deleteNewInv","classes","props","isMobile","useMediaQuery","query","useState","modal","setModal","car_picture","newInv","year","make","model","price","miles","info","dealer_id","image_id","newInvEdit","setNewInvEdit","handleNewInvEdit","e","target","name","value","Portal","className","onSubmit","preventDefault","formData","FormData","append","addImage","encType","id","type","onChange","files","for","autoComplete","required","htmlFor","onClick","to","user","editNewInventory","loading","Skeleton","height","width","variant","animation","Card","key","style","maxWidth","root","CardActionArea","CardMedia","media","image","title","CardContent","Typography","gutterBottom","component","color","CardActions","Button","size","deleteUsedInventory","usedInv","usedInvEdit","setUsedInvEdit","handleUsedInvEdit","editUsedInventory","useStyles","makeStyles","overflowWrap","boxShadow","connect","state","newInventoryReducer","newInventory","usedInventoryReducer","inventory","sales_newInv","getSalesNewInventoryReducer","salesNewInventory","sales_usedInv","getSalesUsedInventoryReducer","salesUsedInventory","userReducer","imageReducer","addNewImage","getUsedInventory","getNewInventory","deleteUsedInv","getNewInventorySales","getUsedInventorySales","isTabletorlargephone","isDesktop","islaptopDesktop","inv_add_sound","Howl","src","addsound","inv_delete_sound","deletesound","new_year","new_make","new_model","searchState","setSearchState","filtNewInv","setFiltNewInv","filtUsedInv","setFiltUsedInv","filtSalesNewInv","setFiltSalesNewInv","filtSalesUsedInv","setFiltSalesUsedInv","used_year","used_make","used_model","searchUsedState","setSearchUsedState","usedInventoryAdd","setUsedInventoryAdd","newInventoryAdd","setNewInventoryAdd","handleSearchChange","handleUsedSearchChange","useEffect","filteredSalesUsedInventory","filter","includes","filteredSalesNewInventory","filteredNewInventory","filteredUsedInventory","handleNewInventoryAdd","setShowNewInventoryModal","handleUsedInventoryAdd","setShowUsedInventoryModal","invId","imageId","play","deleteNewInventory","Howler","volume","showUsedInventoryModal","showNewInventoryModal","length","visibleSlides","Helmet","role","aria-label","naturalSlideWidth","naturalSlideHeight","totalSlides","orientation","dragEnabled","touchEnabled","position","marginTop","map","Fragment","index","portalRoot","document","getElementById","componentDidMount","appendChild","el","componentWillUnMount","removeChild","createElement","ReactDOM","createPortal","top","bottom","left","right","justifyContent","alignItems","backgroundColor","this","children","Component"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,sC,ubCc3C,IAgPeC,MAAMC,MAhPM,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAEvDC,GADuBC,wBAAc,CAAEC,MAAO,uBACnCD,wBAAc,CAAEC,MAAO,wBAFiC,EAG/CC,oBAAS,GAHsC,mBAGlEC,EAHkE,KAG3DC,EAH2D,OAIrCF,mBAAS,CAC3CG,YAAaP,EAAMQ,OAAOX,GAAKU,aAAe,GAC9CE,KAAMT,EAAMQ,OAAOX,GAAKY,MAAQ,GAChCC,KAAMV,EAAMQ,OAAOX,GAAKa,MAAQ,GAChCC,MAAOX,EAAMQ,OAAOX,GAAKc,OAAS,GAClCC,MAAOZ,EAAMQ,OAAOX,GAAKe,OAAS,GAClCC,MAAOb,EAAMQ,OAAOX,GAAKgB,OAAS,GAClCC,KAAMd,EAAMQ,OAAOX,GAAKiB,MAAQ,GAChCC,UAAWf,EAAMQ,OAAOX,GAAKkB,UAC7BC,SAAUhB,EAAMQ,OAAOX,GAAKmB,WAb2C,mBAIlEC,EAJkE,KAItDC,EAJsD,KAwCnEC,EAAmB,SAAAC,GACvBd,GAAS,GACTY,E,yVAAc,CAAD,GACRD,EADQ,eAEVG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkB9B,OACE,oCACGlB,EACC,kBAACmB,EAAA,EAAD,KACE,0BACEC,UAAU,uBACVC,SA9C2B,SAAAN,GACnCA,EAAEO,iBACF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,cAAeb,EAAWV,aAC1CqB,EAASE,OAAO,gBAAiB,UACjC9B,EAAM+B,SAASH,EAAUX,GACzBC,EAAc,CACZX,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAkCAkB,QAAS,uBAET,yBAAKP,UAAU,gBAAgBQ,GAAG,gBAChC,2BACEC,KAAK,OACLD,GAAG,cACHX,KAAK,cACLG,UAAU,gBACVU,SA5DwB,SAAAf,GACpCF,EAAc,CAAEX,YAAaa,EAAEC,OAAOe,MAAM,QA6DlC,2BAAOC,IAAI,eAAX,eACA,0BAAMZ,UAAU,eAAeR,EAAWV,YAAYe,OAGxD,yBAAKG,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAON,EAAWR,KAClB0B,SAAUhB,IAEZ,2BAAOqB,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,UAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAON,EAAWP,KAClByB,SAAUhB,IAEZ,2BAAOqB,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,UAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAON,EAAWN,MAClBwB,SAAUhB,IAEZ,2BAAOqB,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAON,EAAWL,MAClBuB,SAAUhB,IAEZ,2BAAOqB,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAON,EAAWJ,MAClBsB,SAAUhB,IAEZ,2BAAOqB,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,8BACEU,SAAUhB,EACVG,KAAK,OACLC,MAAON,EAAWH,OAEpB,kBAAC,IAAD,CACEW,UAAU,mBACVgB,QAzHwB,WAClCnC,GAAS,GACTY,EAAc,CACZX,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAiHE4B,GACiB,aAAf1C,EAAM2C,KAAsB,cAAgB,qBAJhD,SAUA,4BACElB,UAAU,oBACVgB,QAAS,kBAAMzC,EAAM4C,iBAAiBhD,EAAIqC,GAAIhB,KAFhD,YAQF,KAEJ,kBAAC,IAAD,KACGjB,EAAM6C,QACL,kBAACC,EAAA,EAAD,CAAUC,OAAQ,IAAKC,MAAO,IAAKC,QAAQ,OAAOC,UAAU,SAE5D,kBAACC,EAAA,EAAD,CACEC,IAAKvD,EACLwD,MAIEpD,EAAW,CAAEqD,SAAU,QAASN,MAAO,SAAY,KAErDvB,UAAW1B,EAAQwD,MAEnB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEJ,MAEEpD,EAAW,CAAE+C,MAAO,SAAY,KAElCvB,UAAW1B,EAAQ2D,MACnBC,MAAO/D,EAAIW,YACXqD,MAAOhE,EAAIc,KAAO,IAAMd,EAAIe,QAE9B,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACd,QAAQ,KAAKe,UAAU,MAC7CpE,EAAIa,KADP,IACcb,EAAIc,KADlB,IACyBd,EAAIe,OAE7B,kBAACmD,EAAA,EAAD,CAAYb,QAAQ,QAAQgB,MAAM,gBAAgBD,UAAU,KACzDpE,EAAIkB,QAIX,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ1B,QAAStB,EAAkBiD,KAAK,QAAQH,MAAM,WAAtD,QAGA,kBAACE,EAAA,EAAD,CACE1B,QAAS,kBAAM3C,EAAaF,EAAIqC,GAAIrC,EAAIoB,WACxCoD,KAAK,QACLH,MAAM,WAHR,iB,8NClOd,IAyOevE,MAAMC,MAzOO,SAAC,GAMtB,IALLC,EAKI,EALJA,IACAC,EAII,EAJJA,IACAwE,EAGI,EAHJA,oBACAtE,EAEI,EAFJA,QACAC,EACI,EADJA,MACI,EACsBI,oBAAS,GAD/B,mBACGC,EADH,KACUC,EADV,OAEkCF,mBAAS,CAC7CG,YAAaP,EAAMsE,QAAQzE,GAAKU,aAAe,GAC/CE,KAAMT,EAAMsE,QAAQzE,GAAKY,MAAQ,GACjCC,KAAMV,EAAMsE,QAAQzE,GAAKa,MAAQ,GACjCC,MAAOX,EAAMsE,QAAQzE,GAAKc,OAAS,GACnCC,MAAOZ,EAAMsE,QAAQzE,GAAKe,OAAS,GACnCC,MAAOb,EAAMsE,QAAQzE,GAAKgB,OAAS,GACnCC,KAAMd,EAAMsE,QAAQzE,GAAKiB,MAAQ,GACjCC,UAAWf,EAAMsE,QAAQzE,GAAKkB,UAC9BC,SAAUhB,EAAMsE,QAAQzE,GAAKmB,WAX3B,mBAEGuD,EAFH,KAEgBC,EAFhB,KAsCEC,EAAoB,SAAArD,GACxBd,GAAS,GACTkE,E,yVAAe,IACVD,EADS,eAEXnD,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkB9B,OACE,oCACGlB,EACC,kBAACmB,EAAA,EAAD,KACE,0BACEC,UAAU,uBACVC,SA9C4B,SAAAN,GACpCA,EAAEO,iBACF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,cAAeyC,EAAYhE,aAC3CqB,EAASE,OAAO,gBAAiB,UACjC9B,EAAM+B,SAASH,EAAU2C,GACzBC,EAAe,CACbjE,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAkCAkB,QAAS,uBAET,yBAAKP,UAAU,gBAAgBQ,GAAG,gBAChC,2BACEC,KAAK,OACLD,GAAG,cACHX,KAAK,cACLG,UAAU,gBACVU,SA5DyB,SAAAf,GACrCoD,EAAe,CAAEjE,YAAaa,EAAEC,OAAOe,MAAM,QA6DnC,2BAAOC,IAAI,eAAX,eACA,0BAAMZ,UAAU,eACb8C,EAAYhE,YAAYe,OAI7B,yBAAKG,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOgD,EAAY9D,KACnB0B,SAAUsC,IAEZ,2BAAOjC,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,UAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOgD,EAAY7D,KACnByB,SAAUsC,IAEZ,2BAAOjC,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,UAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOgD,EAAY5D,MACnBwB,SAAUsC,IAEZ,2BAAOjC,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOgD,EAAY3D,MACnBuB,SAAUsC,IAEZ,2BAAOjC,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOgD,EAAY1D,MACnBsB,SAAUsC,IAEZ,2BAAOjC,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,8BACEU,SAAUsC,EACVnD,KAAK,OACLC,MAAOgD,EAAYzD,OAErB,kBAAC,IAAD,CACEW,UAAU,mBACVgB,QA3HyB,WACnCnC,GAAS,GACTkE,EAAe,CACbjE,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAmHE4B,GACiB,aAAf1C,EAAM2C,KAAsB,cAAgB,qBAJhD,SAUA,4BACElB,UAAU,oBACVgB,QAAS,kBAAMzC,EAAM0E,kBAAkB9E,EAAIqC,GAAIsC,KAFjD,YAQF,KAEJ,kBAAC,IAAD,KACGvE,EAAM6C,QACL,kBAACC,EAAA,EAAD,CAAUC,OAAQ,IAAKC,MAAO,IAAKC,QAAQ,OAAOC,UAAU,SAE5D,kBAACC,EAAA,EAAD,CAAMC,IAAKvD,EAAK4B,UAAW1B,EAAQwD,MACjC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEhC,UAAW1B,EAAQ2D,MACnBC,MAAO/D,EAAIW,YACXqD,MAAOhE,EAAIc,KAAO,IAAMd,EAAIe,QAE9B,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACd,QAAQ,KAAKe,UAAU,MAC7CpE,EAAIa,KADP,IACcb,EAAIc,KADlB,IACyBd,EAAIe,OAE7B,kBAACmD,EAAA,EAAD,CAAYb,QAAQ,QAAQgB,MAAM,gBAAgBD,UAAU,KACzDpE,EAAIkB,QAIX,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ1B,QAASgC,EAAmBL,KAAK,QAAQH,MAAM,WAAvD,QAGA,kBAACE,EAAA,EAAD,CACE1B,QAAS,kBAAM4B,EAAoBzE,EAAIqC,GAAIrC,EAAIoB,WAC/CoD,KAAK,QACLH,MAAM,WAHR,iB,4mBChMd,IAAMU,EAAYC,YAAW,CAC3BrB,KAAM,CACJD,SAAU,IACVuB,aAAc,aACd7B,MAAO,IACP8B,UAAW,2BAEbpB,MAAO,CACLX,OAAQ,IACRC,MAAO,OAkjCI+B,uBAZS,SAACC,GACvB,MAAO,CACLxE,OAAQwE,EAAMC,oBAAoBC,cAAgB,GAClDZ,QAASU,EAAMG,qBAAqBC,WAAa,GACjDC,aAAcL,EAAMM,4BAA4BC,mBAAqB,GACrEC,cAAeR,EAAMS,6BAA6BC,oBAAsB,GACxE/C,KAAMqC,EAAMW,YAAYhD,KACxBE,QAASmC,EAAMY,aAAa/C,WAKQ,CACtCd,aACA8D,gBACAC,qBACAC,oBACAC,kBACAlG,iBACAmG,yBACAC,0BACAtD,qBACA8B,uBAVaK,CAWZrF,IAAMC,MAzjCmB,SAACK,GAE3B,IAAMC,EAAWC,wBAAc,CAAEC,MAAO,uBAClCgG,EAAuBjG,wBAAc,CAAEC,MAAO,uBAC9CiG,EAAYlG,wBAAc,CAAEC,MAAO,wBACnCkG,EAAkBnG,wBAAc,CAAEC,MAAO,wBAGzCJ,EAAU4E,IAGV2B,EAAgB,IAAIC,OAAK,CAC7BC,IAAKC,MAIDC,EAAmB,IAAIH,OAAK,CAChCC,IAAKG,MAjB8B,EAqBCvG,mBAAS,CAC7CwG,SAAU,GACVC,SAAU,GACVC,UAAW,KAxBwB,mBAqB9BC,EArB8B,KAqBjBC,EArBiB,OA4BD5G,mBAAS,IA5BR,mBA4B9B6G,EA5B8B,KA4BlBC,EA5BkB,OA+BC9G,mBAAS,IA/BV,mBA+B9B+G,EA/B8B,KA+BjBC,EA/BiB,OAkCShH,mBAAS,IAlClB,mBAkC9BiH,EAlC8B,KAkCbC,EAlCa,OAqCWlH,mBAAS,IArCpB,mBAqC9BmH,EArC8B,KAqCZC,EArCY,OAwCSpH,mBAAS,CACrDqH,UAAW,GACXC,UAAW,GACXC,WAAY,KA3CuB,mBAwC9BC,EAxC8B,KAwCbC,EAxCa,QA+CWzH,mBAAS,CACvDG,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,KAtD6B,qBA+C9BgH,GA/C8B,MA+CZC,GA/CY,SA0DS3H,mBAAS,CACrDG,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,KAjE6B,qBA0D9BkH,GA1D8B,MA0DbC,GA1Da,MAqE/BC,GAAqB,SAAC9G,GAC1B4F,EAAe,KAAKD,EAAN,eAAoB3F,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIvD4G,GAAyB,SAAC/G,GAC9ByG,EAAmB,KAAKD,EAAN,eAAwBxG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIrE6G,qBAAU,WACRlB,EAAc,YAAIlH,EAAMQ,WACvB,IAGH4H,qBAAU,WACRhB,EAAe,YAAIpH,EAAMsE,YACxB,IAGH8D,qBAAU,WACRd,EAAmB,YAAItH,EAAMqF,iBAC5B,IAGH+C,qBAAU,WACRZ,EAAoB,YAAIxH,EAAMwF,kBAC7B,IAGH4C,qBAAU,WACR,IAAMC,EAA6BrI,EAAMwF,cAAc8C,QAAO,SAAC1I,GAC7D,GACEA,EAAIa,KAAK8H,SAASX,EAAgBH,YAClC7H,EAAIc,KAAK6H,SAASX,EAAgBF,YAClC9H,EAAIe,MAAM4H,SAASX,EAAgBD,YAEnC,OAAO/H,KAGX4H,EAAoB,YAAIa,MACvB,CACDT,EAAgBH,UAChBG,EAAgBF,UAChBE,EAAgBD,aAIlBS,qBAAU,WACR,IAAMI,EAA4BxI,EAAMqF,aAAaiD,QAAO,SAAC1I,GAC3D,GACEA,EAAIa,KAAK8H,SAASxB,EAAYH,WAC9BhH,EAAIc,KAAK6H,SAASxB,EAAYF,WAC9BjH,EAAIe,MAAM4H,SAASxB,EAAYD,WAE/B,OAAOlH,KAGX0H,EAAmB,YAAIkB,MACtB,CAACzB,EAAYH,SAAUG,EAAYF,SAAUE,EAAYD,YAG5DsB,qBAAU,WACRZ,EAAoB,YAAIxH,EAAMwF,kBAC7B,CAACxF,EAAMwF,gBAGV4C,qBAAU,WACRd,EAAmB,YAAItH,EAAMqF,iBAC5B,CAACrF,EAAMqF,eAGV+C,qBAAU,WACR,IAAMK,EAAuBzI,EAAMQ,OAAO8H,QAAO,SAAC1I,GAChD,GACEA,EAAIa,KAAK8H,SAASxB,EAAYH,WAC9BhH,EAAIc,KAAK6H,SAASxB,EAAYF,WAC9BjH,EAAIe,MAAM4H,SAASxB,EAAYD,WAE/B,OAAOlH,KAGXsH,EAAc,YAAIuB,MACjB,CAAC1B,EAAYH,SAAUG,EAAYF,SAAUE,EAAYD,YAG5DsB,qBAAU,WACRlB,EAAc,YAAIlH,EAAMQ,WACvB,CAACR,EAAMQ,SAGV4H,qBAAU,WACRhB,EAAe,YAAIpH,EAAMsE,YACxB,CAACtE,EAAMsE,UAGV8D,qBAAU,WACR,IAAMM,EAAwB1I,EAAMsE,QAAQgE,QAAO,SAAC1I,GAClD,GACEA,EAAIa,KAAK8H,SAASX,EAAgBH,YAClC7H,EAAIc,KAAK6H,SAASX,EAAgBF,YAClC9H,EAAIe,MAAM4H,SAASX,EAAgBD,YAEnC,OAAO/H,KAGXwH,EAAe,YAAIsB,MAClB,CACDd,EAAgBH,UAChBG,EAAgBF,UAChBE,EAAgBD,aAIlB,IAAMgB,GAAwB,SAACvH,GAC7BwH,IAAyB,GACzBX,GAAmB,KAAKD,GAAN,eAAwB5G,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAI/DsH,GAAyB,SAACzH,GAC9B0H,IAA0B,GAC1Bf,GAAoB,KACfD,GADc,eAEhB1G,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkCxB8C,GAAsB,SAAC0E,EAAOC,GAClChJ,EAAMgG,cAAc+C,EAAOC,GAC3BtC,EAAiBuC,QAIbC,GAAqB,SAACH,EAAOC,GACjChJ,EAAMF,aAAaiJ,EAAOC,GAC1BtC,EAAiBuC,OACjBjC,EAAe,CAAEJ,SAAU,GAAIC,SAAU,GAAIC,UAAW,MAsB1DqC,SAAOC,OAAO,IAlQuB,OAqQuBhJ,oBAAS,GArQhC,qBAqQ9BiJ,GArQ8B,MAqQNP,GArQM,SAsQqB1I,oBAAS,GAtQ9B,qBAsQ9BkJ,GAtQ8B,MAsQPV,GAtQO,MAmSrCR,qBAAU,WACO,WAAfpI,EAAM2C,KACF3C,EAAM8F,oBAAsB9F,EAAM+F,kBAClC/F,EAAMkG,yBAA2BlG,EAAMiG,yBAC1C,CAACjG,EAAMQ,OAAO+I,SAEjB,IAAMC,GAAgB,WACpB,OAAInD,EACK,EACED,EACF,EACED,GAAwBlG,EAC1B,OADF,GAKT,OACE,oCACE,kBAACwJ,EAAA,OAAD,KACE,2DAGDJ,GACC,kBAAC7H,EAAA,EAAD,KACE,0BACEC,UAAU,uBACVC,SA7GwB,SAACN,GACjCA,EAAEO,iBACF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,cAAegG,GAAiBvH,aAChDqB,EAASE,OAAO,gBAAiB,UACjC9B,EAAM+B,SAASH,EAAUkG,IACzBxB,EAAc2C,OACdlB,GAAoB,CAClBxH,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAgGAkB,QAAS,uBAET,yBAAKP,UAAU,gBAAgBQ,GAAG,gBAChC,2BACEC,KAAK,OACLD,GAAG,cACHX,KAAK,cACLG,UAAU,gBACVU,SAhIqB,SAACf,GAClC2G,GAAoB,CAAExH,YAAaa,EAAEC,OAAOe,MAAM,QAiIxC,2BAAOC,IAAI,eAAX,eACA,0BAAMZ,UAAU,eACbqG,GAAiBvH,YAAYe,OAIlC,yBAAKG,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOuG,GAAiBrH,KACxB0B,SAAU0G,KAEZ,2BAAOrG,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,UAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOuG,GAAiBpH,KACxByB,SAAU0G,KAEZ,2BAAOrG,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,UAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOuG,GAAiBnH,MACxBwB,SAAU0G,KAEZ,2BAAOrG,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOuG,GAAiBlH,MACxBuB,SAAU0G,KAEZ,2BAAOrG,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,yBAAKA,UAAU,iBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,gBACVF,MAAOuG,GAAiBjH,MACxBsB,SAAU0G,KAEZ,2BAAOrG,QAAQ,aAAaf,UAAU,sBACpC,0BAAMA,UAAU,wBAAhB,WAIJ,8BACEU,SAAU0G,GACVvH,KAAK,OACLC,MAAOuG,GAAiBhH,OAG1B,yBAAKW,UAAU,0BACb,kBAAC,IAAD,CACEA,UAAU,mBACVgB,QA9JyB,WACrCqG,IAA0B,GAC1Bf,GAAoB,CAClBxH,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAsJI4B,GACiB,aAAf1C,EAAM2C,KACF,cACA,qBANR,SAYA,4BAAQlB,UAAU,qBAAlB,aAIJ,KAEH6H,GACC,kBAAC9H,EAAA,EAAD,KACE,0BACEC,UAAU,sBACVC,SA3MuB,SAACN,GAChCA,EAAEO,iBACF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,cAAekG,GAAgBzH,aAC/CqB,EAASE,OAAO,gBAAiB,UACjC9B,EAAM6F,YAAYjE,EAAUoG,IAC5B1B,EAAc2C,OACdhB,GAAmB,CACjB1H,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,OA+LA,yBAAKW,UAAU,eAAeQ,GAAG,gBAC/B,2BACEC,KAAK,OACLD,GAAG,cACHX,KAAK,cACLG,UAAU,eACVO,QAAS,sBACTG,SAzPoB,SAACf,GACjC6G,GAAmB,CAAE1H,YAAaa,EAAEC,OAAOe,MAAM,QA0PvC,2BAAOI,QAAQ,eAAf,eACA,0BAAMf,UAAU,eACbuG,GAAgBzH,YAAYe,OAIjC,yBAAKG,UAAU,gBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,eACVF,MAAOyG,GAAgBvH,KACvB0B,SAAUwG,KAEZ,2BAAOnG,QAAQ,aAAaf,UAAU,qBACpC,0BAAMA,UAAU,uBAAhB,UAIJ,yBAAKA,UAAU,gBACb,2BACES,KAAK,OACLD,GAAG,OACHX,KAAK,OACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,eACVF,MAAOyG,GAAgBtH,KACvByB,SAAUwG,KAEZ,2BAAOnG,QAAQ,aAAaf,UAAU,qBACpC,0BAAMA,UAAU,uBAAhB,UAIJ,yBAAKA,UAAU,gBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,eACVF,MAAOyG,GAAgBrH,MACvBwB,SAAUwG,KAEZ,2BAAOnG,QAAQ,aAAaf,UAAU,qBACpC,0BAAMA,UAAU,uBAAhB,WAIJ,yBAAKA,UAAU,gBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,eACVF,MAAOyG,GAAgBpH,MACvBuB,SAAUwG,KAEZ,2BAAOnG,QAAQ,aAAaf,UAAU,qBACpC,0BAAMA,UAAU,uBAAhB,WAIJ,yBAAKA,UAAU,gBACb,2BACES,KAAK,OACLD,GAAG,QACHX,KAAK,QACLgB,aAAa,MACbC,UAAQ,EACRd,UAAU,eACVF,MAAOyG,GAAgBnH,MACvBsB,SAAUwG,KAEZ,2BAAOnG,QAAQ,aAAaf,UAAU,qBACpC,0BAAMA,UAAU,uBAAhB,WAIJ,8BACEU,SAAUwG,GACVrH,KAAK,OACLC,MAAOyG,GAAgBlH,OAGzB,yBAAKW,UAAU,yBACb,kBAAC,IAAD,CACEA,UAAU,kBACVgB,QA/QwB,WACpCmG,IAAyB,GACzBX,GAAmB,CACjB1H,YAAa,GACbE,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,MAuQI4B,GACiB,aAAf1C,EAAM2C,KACF,cACA,qBANR,SAYA,4BAAQlB,UAAU,oBAAlB,aAIJ,KAEJ,6BAGE,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,yBAAd,iBAEgB,WAAfzB,EAAM2C,MAAqB3C,EAAMQ,OAAO+I,QAAU,EACjD,kBAAC,IAAD,CACE9G,QAASkG,GACTjG,GAAG,iCACHjB,UAAU,0BAEV,0BAAMA,UAAU,wBAAhB,QAAmD,KAEnD,KAIJ,yBAAKA,UAAU,wBACb,0BAAMA,UAAU,+BACd,yBAAKA,UAAU,SACb,2BACES,KAAK,OACLZ,KAAK,WACLW,GAAG,WACHK,aAAa,MACbC,UAAQ,EACRd,UAAU,cACVF,MAAOwF,EAAYH,SACnBzE,SAAU,SAACf,GAAD,OAAO8G,GAAmB9G,MAEtC,2BAAOoB,QAAQ,aAAaf,UAAU,cACpC,0BAAMA,UAAU,gBAAhB,UAIJ,yBAAKA,UAAU,SACb,2BACES,KAAK,OACLZ,KAAK,WACLW,GAAG,WACHK,aAAa,MACbC,UAAQ,EACRd,UAAU,cACVF,MAAOwF,EAAYF,SACnB1E,SAAU,SAACf,GAAD,OAAO8G,GAAmB9G,MAEtC,2BAAOoB,QAAQ,aAAaf,UAAU,cACpC,0BAAMA,UAAU,gBAAhB,UAGJ,yBAAKA,UAAU,SACb,2BACES,KAAK,OACLZ,KAAK,YACLW,GAAG,YACHK,aAAa,MACbC,UAAQ,EACRd,UAAU,cACVF,MAAOwF,EAAYD,UACnB3E,SAAU,SAACf,GAAD,OAAO8G,GAAmB9G,MAEtC,2BAAOoB,QAAQ,aAAaf,UAAU,cACpC,0BAAMA,UAAU,gBAAhB,aAOQ,WAAfzB,EAAM2C,KACmB,IAAxB3C,EAAMQ,OAAO+I,OACX,yBAAK9H,UAAU,2BACb,sDAC0B,IACxB,kBAAC,IAAD,CACEgB,QAASkG,GACTjG,GAAG,kCAEH,0BAAMjB,UAAU,uBAAhB,QAAkD,KANtD,SAQS,IACP,0BAAMiI,KAAK,MAAMC,aAAW,UAA5B,kBAMJ,oCACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,IACpBC,YAAa9J,EAAMQ,OAAO+I,OAC1BQ,YAAY,aACZP,cAAeA,KACfQ,aAAa,EACbC,cAAc,EACd5G,MAAO,CAAE6G,SAAU,aAEnB,kBAAC,IAAD,CACE7G,MAAO,CAAE8G,UAAW,QACpB1I,UAAW2E,EAAY,qBAAuB,MAEpB,KAAzBW,EAAYH,UACY,KAAzBG,EAAYF,UACc,KAA1BE,EAAYD,UACR9G,EAAMQ,OAAO4J,KAAI,SAACxK,EAAKC,GACrB,OACE,kBAAC,IAAMwK,SAAP,CAAgBjH,IAAKvD,GACnB,kBAAC,EAAD,CACED,IAAKA,EACLC,IAAKA,EACLC,aAAcoJ,GACdnJ,QAASA,EACTC,MAAOA,QAKfiH,EAAWmD,KAAI,SAACxK,EAAKC,GACnB,OACE,kBAAC,IAAMwK,SAAP,CAAgBjH,IAAKvD,GACnB,kBAAC,EAAD,CACED,IAAKA,EACLC,IAAKA,EACLC,aAAcoJ,GACdnJ,QAASA,EACTC,MAAOA,SAMpBA,EAAMQ,OAAO+I,OAAS,GAAKlD,EAC1B,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,KACHzB,EAAMQ,OAAO+I,OAAS,GAAKlD,EAC1B,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,OAIsB,IAA9BzB,EAAMqF,aAAakE,OACrB,yBAAK9H,UAAU,2BACb,sDAC0B,IACxB,0BAAMiI,KAAK,MAAMC,aAAW,UAA5B,kBAMJ,oCACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,IACpBC,YAAa9J,EAAMqF,aAAakE,OAChCQ,YAAY,aACZP,cAAeA,KACfQ,aAAa,EACbC,cAAc,EACd5G,MAAO,CAAE6G,SAAU,aAEnB,kBAAC,IAAD,CACE7G,MAAO,CAAE8G,UAAW,QACpB1I,UAAW2E,EAAY,qBAAuB,MAEpB,KAAzBW,EAAYH,UACY,KAAzBG,EAAYF,UACc,KAA1BE,EAAYD,UACR9G,EAAMqF,cACNrF,EAAMqF,aAAa+E,KAAI,SAACxK,EAAKC,GAC3B,OACE,kBAAC,IAAD,CAAOuD,IAAKvD,GACV,kBAACsD,EAAA,EAAD,CAAMC,IAAKvD,EAAK4B,UAAW1B,EAAQwD,MACjC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEhC,UAAW1B,EAAQ2D,MACnBC,MAAO/D,EAAIW,YACXqD,MAAOhE,EAAIc,KAAO,IAAMd,EAAIe,QAE9B,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZd,QAAQ,KACRe,UAAU,MAETpE,EAAIa,KALP,IAKcb,EAAIc,KALlB,IAKyBd,EAAIe,OAE7B,kBAACmD,EAAA,EAAD,CACEb,QAAQ,QACRgB,MAAM,gBACND,UAAU,KAETpE,EAAIkB,aAQnBuG,EAAgB+C,KAAI,SAACxK,EAAKC,GACxB,OACE,kBAAC,IAAD,CAAOuD,IAAKvD,GACV,kBAACsD,EAAA,EAAD,CAAMC,IAAKvD,EAAK4B,UAAW1B,EAAQwD,MACjC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEhC,UAAW1B,EAAQ2D,MACnBC,MAAO/D,EAAIW,YACXqD,MAAOhE,EAAIc,KAAO,IAAMd,EAAIe,QAE9B,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZd,QAAQ,KACRe,UAAU,MAETpE,EAAIa,KALP,IAKcb,EAAIc,KALlB,IAKyBd,EAAIe,OAE7B,kBAACmD,EAAA,EAAD,CACEb,QAAQ,QACRgB,MAAM,gBACND,UAAU,KAETpE,EAAIkB,cASxBd,EAAMqF,aAAakE,OAAS,GAAKlD,EAChC,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,KACHzB,EAAMqF,aAAakE,OAAS,GAAKlD,EAChC,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,QAQZ,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,0BAAd,kBAEgB,WAAfzB,EAAM2C,MAAqB3C,EAAMsE,QAAQiF,QAAU,EAClD,kBAAC,IAAD,CACE9G,QAASoG,GACTnG,GAAG,kCACHjB,UAAU,2BAEV,0BAAMA,UAAU,wBAAhB,QAAmD,KAEnD,KAKJ,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,+BACd,yBAAKA,UAAU,SACb,2BACES,KAAK,OACLZ,KAAK,YACLW,GAAG,YACHK,aAAa,MACbC,UAAQ,EACRd,UAAU,cACVF,MAAOqG,EAAgBH,UACvBtF,SAAU,SAACf,GAAD,OAAO+G,GAAuB/G,MAE1C,2BAAOoB,QAAQ,aAAaf,UAAU,cACpC,0BAAMA,UAAU,gBAAhB,UAGJ,yBAAKA,UAAU,SACb,2BACES,KAAK,OACLZ,KAAK,YACLW,GAAG,YACHK,aAAa,MACbC,UAAQ,EACRd,UAAU,cACVF,MAAOqG,EAAgBF,UACvBvF,SAAU,SAACf,GAAD,OAAO+G,GAAuB/G,MAE1C,2BAAOoB,QAAQ,aAAaf,UAAU,cACpC,0BAAMA,UAAU,gBAAhB,UAGJ,yBAAKA,UAAU,SACb,2BACES,KAAK,OACLZ,KAAK,aACLW,GAAG,aACHK,aAAa,MACbC,UAAQ,EACRd,UAAU,cACVF,MAAOqG,EAAgBD,WACvBxF,SAAU,SAACf,GAAD,OAAO+G,GAAuB/G,MAE1C,2BAAOoB,QAAQ,aAAaf,UAAU,cACpC,0BAAMA,UAAU,gBAAhB,aAOQ,WAAfzB,EAAM2C,KACoB,IAAzB3C,EAAMsE,QAAQiF,OACZ,yBAAK9H,UAAU,4BACb,uDAC2B,IACzB,kBAAC,IAAD,CACEgB,QAASoG,GACTnG,GAAG,mCAEH,0BAAMjB,UAAU,wBAAhB,UAAqD,KANzD,SAQS,IACP,0BAAMiI,KAAK,MAAMC,aAAW,UAA5B,kBAMJ,oCACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,IACpBC,YAAa9J,EAAMsE,QAAQiF,OAC3BQ,YAAY,aACZP,cAAeA,KACfQ,aAAa,EACbC,cAAc,EACd5G,MAAO,CAAE6G,SAAU,aAEnB,kBAAC,IAAD,CACE7G,MAAO,CAAE8G,UAAW,QACpB1I,UAAW2E,EAAY,qBAAuB,MAEf,KAA9BwB,EAAgBH,WACa,KAA9BG,EAAgBF,WACe,KAA/BE,EAAgBD,WACZ3H,EAAMsE,QAAQ8F,KAAI,SAACxK,EAAKC,GACtB,OACE,kBAAC,IAAMwK,SAAP,CAAgBjH,IAAKvD,GACnB,kBAAC,EAAD,CACED,IAAKA,EACLC,IAAKA,EACLwE,oBAAqBA,GACrBtE,QAASA,EACTC,MAAOA,QAKfmH,EAAYiD,KAAI,SAACxK,EAAKC,GACpB,OACE,kBAAC,IAAMwK,SAAP,CAAgBjH,IAAKvD,GACnB,kBAAC,EAAD,CACED,IAAKA,EACLC,IAAKA,EACLwE,oBAAqBA,GACrBtE,QAASA,EACTC,MAAOA,SAMpBA,EAAMsE,QAAQiF,OAAS,GAAKlD,EAC3B,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,KACHzB,EAAMsE,QAAQiF,OAAS,GAAKlD,EAC3B,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,OAIuB,IAA/BzB,EAAMwF,cAAc+D,OACtB,yBAAK9H,UAAU,4BACb,sDAC0B,IACxB,0BAAMiI,KAAK,MAAMC,aAAW,UAA5B,kBAMJ,oCACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,IACpBC,YAAa9J,EAAMwF,cAAc+D,OACjCQ,YAAY,aACZP,cAAeA,KACfQ,aAAa,EACbC,cAAc,EACd5G,MAAO,CAAE6G,SAAU,aAEnB,kBAAC,IAAD,CACE7G,MAAO,CAAE8G,UAAW,QACpB1I,UAAW2E,EAAY,qBAAuB,MAEf,KAA9BwB,EAAgBH,WACa,KAA9BG,EAAgBF,WACe,KAA/BE,EAAgBD,WACZ3H,EAAMwF,eACNxF,EAAMwF,cAAc4E,KAAI,SAACxK,EAAKC,GAC5B,OACE,kBAAC,IAAD,CAAOyK,MAAOzK,EAAKuD,IAAKvD,GACtB,kBAACsD,EAAA,EAAD,CAAMC,IAAKvD,EAAK4B,UAAW1B,EAAQwD,MACjC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEhC,UAAW1B,EAAQ2D,MACnBC,MAAO/D,EAAIW,YACXqD,MAAOhE,EAAIc,KAAO,IAAMd,EAAIe,QAE9B,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZd,QAAQ,KACRe,UAAU,MAETpE,EAAIa,KALP,IAKcb,EAAIc,KALlB,IAKyBd,EAAIe,OAE7B,kBAACmD,EAAA,EAAD,CACEb,QAAQ,QACRgB,MAAM,gBACND,UAAU,KAETpE,EAAIkB,aAQnByG,EAAiB6C,KAAI,SAACxK,EAAKC,GACzB,OACE,kBAAC,IAAD,CAAOyK,MAAOzK,EAAKuD,IAAKvD,GACtB,kBAACsD,EAAA,EAAD,CAAMC,IAAKvD,EAAK4B,UAAW1B,EAAQwD,MACjC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEhC,UAAW1B,EAAQ2D,MACnBC,MAAO/D,EAAIW,YACXqD,MAAOhE,EAAIc,KAAO,IAAMd,EAAIe,QAE9B,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZd,QAAQ,KACRe,UAAU,MAETpE,EAAIa,KALP,IAKcb,EAAIc,KALlB,IAKyBd,EAAIe,OAE7B,kBAACmD,EAAA,EAAD,CACEb,QAAQ,QACRgB,MAAM,gBACND,UAAU,KAETpE,EAAIkB,cASxBd,EAAMwF,cAAc+D,OAAS,GAAKlD,EACjC,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,KACHzB,EAAMwF,cAAc+D,OAAS,GAAKlD,EACjC,kBAAC,IAAD,CAAY5E,UAAU,iBAAtB,KACE,e,kHCzkCd8I,EAAaC,SAASC,eAAe,UAErCjJ,E,YACJ,aAAe,IAAD,8BACZ,+CAIFkJ,kBAAoB,WAClBH,EAAWI,YAAY,EAAKC,KANhB,EASdC,qBAAuB,WACrBN,EAAWO,YAAY,EAAKF,KAR5B,EAAKA,GAAKJ,SAASO,cAAc,OAFrB,E,sEAcZ,OAAOC,IAASC,aACd,yBACExJ,UAAU,gBACV4B,MAAO,CACL6G,SAAU,QACVgB,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,oBAGlBC,KAAKzL,MAAM0L,UAEdD,KAAKb,Q,GA/BUe,aAoCNjM,QAAMC,KAAK6B,I,mBCzC1BhC,EAAOC,QAAU,IAA0B","file":"static/js/9.25f2d5d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addsound.72b42a98.mp3\";","import React, { useState } from \"react\";\nimport { Slide } from \"pure-react-carousel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport Portal from \"../Portal\";\nimport { Link } from \"@reach/router\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst DealerNewInvSingle = ({ inv, idx, deleteNewInv, classes, props }) => {\n  const isTabletorlargephone = useMediaQuery({ query: \"(max-width: 720px)\" });\n  const isMobile = useMediaQuery({ query: \"(max-width: 320px)\" });\n  const [modal, setModal] = useState(false);\n  const [newInvEdit, setNewInvEdit] = useState({\n    car_picture: props.newInv[idx].car_picture || \"\",\n    year: props.newInv[idx].year || \"\",\n    make: props.newInv[idx].make || \"\",\n    model: props.newInv[idx].model || \"\",\n    price: props.newInv[idx].price || \"\",\n    miles: props.newInv[idx].miles || \"\",\n    info: props.newInv[idx].info || \"\",\n    dealer_id: props.newInv[idx].dealer_id,\n    image_id: props.newInv[idx].image_id\n  });\n\n  // handleChange for newInvEdit picture\n  const handleNewInventoryEditPicture = e => {\n    setNewInvEdit({ car_picture: e.target.files[0] });\n  };\n\n  // handle Submit for New Inv Edit form\n  const handleNewInventoryEditSubmit = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"car_picture\", newInvEdit.car_picture);\n    formData.append(\"upload_preset\", \"darwin\");\n    props.addImage(formData, newInvEdit);\n    setNewInvEdit({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\"\n    });\n  };\n\n  // on click for used inventory\n  const handleNewInvEdit = e => {\n    setModal(true);\n    setNewInvEdit({\n      ...newInvEdit,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // handle used inventory close button\n  const handleNewInvEditCloseButton = () => {\n    setModal(false);\n    setNewInvEdit({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\"\n    });\n  };\n\n  return (\n    <>\n      {modal ? (\n        <Portal>\n          <form\n            className=\"usedInventoryAddForm\"\n            onSubmit={handleNewInventoryEditSubmit}\n            encType={\"multipart/form-data\"}\n          >\n            <div className=\"usedInv-field\" id=\"picture_file\">\n              <input\n                type=\"file\"\n                id=\"car_picture\"\n                name=\"car_picture\"\n                className=\"usedInv-group\"\n                onChange={handleNewInventoryEditPicture}\n              />\n              <label for=\"car_picture\">Upload file</label>\n              <span className=\"picture_url\">{newInvEdit.car_picture.name}</span>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"year\"\n                name=\"year\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={newInvEdit.year}\n                onChange={handleNewInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Year</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"make\"\n                name=\"make\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={newInvEdit.make}\n                onChange={handleNewInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Make</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"model\"\n                name=\"model\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={newInvEdit.model}\n                onChange={handleNewInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Model</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"price\"\n                name=\"price\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={newInvEdit.price}\n                onChange={handleNewInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Price</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"miles\"\n                name=\"miles\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={newInvEdit.miles}\n                onChange={handleNewInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Miles</span>\n              </label>\n            </div>\n\n            <textarea\n              onChange={handleNewInvEdit}\n              name=\"info\"\n              value={newInvEdit.info}\n            ></textarea>\n            <Link\n              className=\"usedInv-closeBtn\"\n              onClick={handleNewInvEditCloseButton}\n              to={\n                props.user === \"salesman\" ? \"/sales/dash\" : \"/dealer/inventory\"\n              }\n            >\n              Close\n            </Link>\n\n            <button\n              className=\"usedInv-submitBtn\"\n              onClick={() => props.editNewInventory(inv.id, newInvEdit)}\n            >\n              Submit\n            </button>\n          </form>\n        </Portal>\n      ) : null}\n\n      <Slide>\n        {props.loading ? (\n          <Skeleton height={248} width={270} variant=\"rect\" animation=\"wave\" />\n        ) : (\n          <Card\n            key={idx}\n            style={\n              (isTabletorlargephone\n                ? { maxWidth: \"445px\", width: \"445px\" }\n                : null,\n              isMobile ? { maxWidth: \"270px\", width: \"270px\" } : null)\n            }\n            className={classes.root}\n          >\n            <CardActionArea>\n              <CardMedia\n                style={\n                  (isTabletorlargephone ? { width: \"445px\" } : null,\n                  isMobile ? { width: \"270px\" } : null)\n                }\n                className={classes.media}\n                image={inv.car_picture}\n                title={inv.make + \" \" + inv.model}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {inv.year} {inv.make} {inv.model}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {inv.info}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button onClick={handleNewInvEdit} size=\"small\" color=\"primary\">\n                Edit\n              </Button>\n              <Button\n                onClick={() => deleteNewInv(inv.id, inv.image_id)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                Delete\n              </Button>\n            </CardActions>\n          </Card>\n        )}\n      </Slide>\n    </>\n  );\n};\n\nexport default React.memo(DealerNewInvSingle);\n","import React, { useState } from \"react\";\nimport { Slide } from \"pure-react-carousel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Portal from \"../Portal\";\nimport { Link } from \"@reach/router\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst DealerUsedInvSingle = ({\n  inv,\n  idx,\n  deleteUsedInventory,\n  classes,\n  props\n}) => {\n  const [modal, setModal] = useState(false);\n  const [usedInvEdit, setUsedInvEdit] = useState({\n    car_picture: props.usedInv[idx].car_picture || \"\",\n    year: props.usedInv[idx].year || \"\",\n    make: props.usedInv[idx].make || \"\",\n    model: props.usedInv[idx].model || \"\",\n    price: props.usedInv[idx].price || \"\",\n    miles: props.usedInv[idx].miles || \"\",\n    info: props.usedInv[idx].info || \"\",\n    dealer_id: props.usedInv[idx].dealer_id,\n    image_id: props.usedInv[idx].image_id\n  });\n\n  // handleChange for newInvEdit picture\n  const handleUsedInventoryEditPicture = e => {\n    setUsedInvEdit({ car_picture: e.target.files[0] });\n  };\n\n  // handle Submit for New Inv Edit form\n  const handleUsedInventoryEditSubmit = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"car_picture\", usedInvEdit.car_picture);\n    formData.append(\"upload_preset\", \"darwin\");\n    props.addImage(formData, usedInvEdit);\n    setUsedInvEdit({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\"\n    });\n  };\n\n  // on click for used inventory\n  const handleUsedInvEdit = e => {\n    setModal(true);\n    setUsedInvEdit({\n      ...usedInvEdit,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // handle used inventory close button\n  const handleUsedInvEditCloseButton = () => {\n    setModal(false);\n    setUsedInvEdit({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\"\n    });\n  };\n\n  return (\n    <>\n      {modal ? (\n        <Portal>\n          <form\n            className=\"usedInventoryAddForm\"\n            onSubmit={handleUsedInventoryEditSubmit}\n            encType={\"multipart/form-data\"}\n          >\n            <div className=\"usedInv-field\" id=\"picture_file\">\n              <input\n                type=\"file\"\n                id=\"car_picture\"\n                name=\"car_picture\"\n                className=\"usedInv-group\"\n                onChange={handleUsedInventoryEditPicture}\n              />\n              <label for=\"car_picture\">Upload file</label>\n              <span className=\"picture_url\">\n                {usedInvEdit.car_picture.name}\n              </span>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"year\"\n                name=\"year\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInvEdit.year}\n                onChange={handleUsedInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Year</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"make\"\n                name=\"make\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInvEdit.make}\n                onChange={handleUsedInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Make</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"model\"\n                name=\"model\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInvEdit.model}\n                onChange={handleUsedInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Model</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"price\"\n                name=\"price\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInvEdit.price}\n                onChange={handleUsedInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Price</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"miles\"\n                name=\"miles\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInvEdit.miles}\n                onChange={handleUsedInvEdit}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Miles</span>\n              </label>\n            </div>\n\n            <textarea\n              onChange={handleUsedInvEdit}\n              name=\"info\"\n              value={usedInvEdit.info}\n            ></textarea>\n            <Link\n              className=\"usedInv-closeBtn\"\n              onClick={handleUsedInvEditCloseButton}\n              to={\n                props.user === \"salesman\" ? \"/sales/dash\" : \"/dealer/inventory\"\n              }\n            >\n              Close\n            </Link>\n\n            <button\n              className=\"usedInv-submitBtn\"\n              onClick={() => props.editUsedInventory(inv.id, usedInvEdit)}\n            >\n              Submit\n            </button>\n          </form>\n        </Portal>\n      ) : null}\n\n      <Slide>\n        {props.loading ? (\n          <Skeleton height={248} width={270} variant=\"rect\" animation=\"wave\" />\n        ) : (\n          <Card key={idx} className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={inv.car_picture}\n                title={inv.make + \" \" + inv.model}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {inv.year} {inv.make} {inv.model}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {inv.info}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button onClick={handleUsedInvEdit} size=\"small\" color=\"primary\">\n                Edit\n              </Button>\n              <Button\n                onClick={() => deleteUsedInventory(inv.id, inv.image_id)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                Delete\n              </Button>\n            </CardActions>\n          </Card>\n        )}\n      </Slide>\n    </>\n  );\n};\n\nexport default React.memo(DealerUsedInvSingle);\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport Portal from \"../Portal\";\nimport { connect } from \"react-redux\";\nimport {\n  addImage,\n  addNewImage,\n  getUsedInventory,\n  getNewInventory,\n  deleteUsedInv,\n  deleteNewInv,\n  getNewInventorySales,\n  getUsedInventorySales,\n  editUsedInventory,\n  editNewInventory,\n} from \"../../actions/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n} from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport DealerNewInvSingle from \"./DealerNewInvSingle\";\nimport DealerUsedInvSingle from \"./DealerUsedInvSingle\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Howl, Howler } from \"howler\";\nimport addsound from \"../../sounds/addsound.mp3\";\nimport deletesound from \"../../sounds/deletesound.mp3\";\nimport { Helmet } from \"react-helmet\";\n\n// Material-ui  Make Styles\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    overflowWrap: \"break-word\",\n    width: 270,\n    boxShadow: \"4px 4px 4px solid black\",\n  },\n  media: {\n    height: 140,\n    width: 270,\n  },\n});\n\nconst DealerInventoryMain = (props) => {\n  // React Reaponsive Media Queries\n  const isMobile = useMediaQuery({ query: \"(min-width: 320px)\" });\n  const isTabletorlargephone = useMediaQuery({ query: \"(min-width: 720px)\" });\n  const isDesktop = useMediaQuery({ query: \"(min-width: 1024px)\" });\n  const islaptopDesktop = useMediaQuery({ query: \"(min-width: 1400px)\" });\n\n  // Mui Classes\n  const classes = useStyles();\n\n  // Add Sound Howl\n  const inv_add_sound = new Howl({\n    src: addsound,\n  });\n\n  // Delete Sound Howl\n  const inv_delete_sound = new Howl({\n    src: deletesound,\n  });\n\n  // new inventory state search\n  const [searchState, setSearchState] = useState({\n    new_year: \"\",\n    new_make: \"\",\n    new_model: \"\",\n  });\n\n  // Filter New Inventory\n  const [filtNewInv, setFiltNewInv] = useState([]);\n\n  // Filter Used Inventory\n  const [filtUsedInv, setFiltUsedInv] = useState([]);\n\n  // Filter Sales New Inventory\n  const [filtSalesNewInv, setFiltSalesNewInv] = useState([]);\n\n  // Filter Sales Used Inventory\n  const [filtSalesUsedInv, setFiltSalesUsedInv] = useState([]);\n\n  // used inventory state search\n  const [searchUsedState, setSearchUsedState] = useState({\n    used_year: \"\",\n    used_make: \"\",\n    used_model: \"\",\n  });\n\n  // used inventory add state\n  const [usedInventoryAdd, setUsedInventoryAdd] = useState({\n    car_picture: \"\",\n    year: \"\",\n    make: \"\",\n    model: \"\",\n    price: \"\",\n    miles: \"\",\n    info: \"\",\n  });\n\n  // new inventory add state\n  const [newInventoryAdd, setNewInventoryAdd] = useState({\n    car_picture: \"\",\n    year: \"\",\n    make: \"\",\n    model: \"\",\n    price: \"\",\n    miles: \"\",\n    info: \"\",\n  });\n\n  // new inventory search for salesman too\n  const handleSearchChange = (e) => {\n    setSearchState({ ...searchState, [e.target.name]: e.target.value });\n  };\n\n  // used inventory search for salesman too\n  const handleUsedSearchChange = (e) => {\n    setSearchUsedState({ ...searchUsedState, [e.target.name]: e.target.value });\n  };\n\n  // Use Effect for Setting filtNewInv state to new inventory items\n  useEffect(() => {\n    setFiltNewInv([...props.newInv]);\n  }, []);\n\n  // Use Effect for Setting filtUsedInv state to used inventory items\n  useEffect(() => {\n    setFiltUsedInv([...props.usedInv]);\n  }, []);\n\n  // Use Effect for setting filtSalesNewInv state to sales new inv items\n  useEffect(() => {\n    setFiltSalesNewInv([...props.sales_newInv]);\n  }, []);\n\n  // Use Effect for setting filtSalesUsedInv state to sales used inv items\n  useEffect(() => {\n    setFiltSalesUsedInv([...props.sales_usedInv]);\n  }, []);\n\n  // Use Effect to filter through sales new inv and set inv to state if yr make or model changes\n  useEffect(() => {\n    const filteredSalesUsedInventory = props.sales_usedInv.filter((inv) => {\n      if (\n        inv.year.includes(searchUsedState.used_year) &&\n        inv.make.includes(searchUsedState.used_make) &&\n        inv.model.includes(searchUsedState.used_model)\n      ) {\n        return inv;\n      }\n    });\n    setFiltSalesUsedInv([...filteredSalesUsedInventory]);\n  }, [\n    searchUsedState.used_year,\n    searchUsedState.used_make,\n    searchUsedState.used_model,\n  ]);\n\n  // Use Effect to filter through sales new inv and set inv to state if yr make or model changes\n  useEffect(() => {\n    const filteredSalesNewInventory = props.sales_newInv.filter((inv) => {\n      if (\n        inv.year.includes(searchState.new_year) &&\n        inv.make.includes(searchState.new_make) &&\n        inv.model.includes(searchState.new_model)\n      ) {\n        return inv;\n      }\n    });\n    setFiltSalesNewInv([...filteredSalesNewInventory]);\n  }, [searchState.new_year, searchState.new_make, searchState.new_model]);\n\n  // After I delete this updates the filteredSalesUsedInv with the new contents of the props.sales_usedInv arr\n  useEffect(() => {\n    setFiltSalesUsedInv([...props.sales_usedInv]);\n  }, [props.sales_usedInv]);\n\n  // After I delete this updates the filteredSalesNewInv with the new contents of the props.sales_newInv arr\n  useEffect(() => {\n    setFiltSalesNewInv([...props.sales_newInv]);\n  }, [props.sales_newInv]);\n\n  // Use Effect to filter through newInv and set inv to state if year make or model changes\n  useEffect(() => {\n    const filteredNewInventory = props.newInv.filter((inv) => {\n      if (\n        inv.year.includes(searchState.new_year) &&\n        inv.make.includes(searchState.new_make) &&\n        inv.model.includes(searchState.new_model)\n      ) {\n        return inv;\n      }\n    });\n    setFiltNewInv([...filteredNewInventory]);\n  }, [searchState.new_year, searchState.new_make, searchState.new_model]);\n\n  // After I delete this updates the filteredInv with the new contents of the props.newInv arr\n  useEffect(() => {\n    setFiltNewInv([...props.newInv]);\n  }, [props.newInv]);\n\n  // After I delete this updates the filteredUsedInv with the new contents of the props.usedInv arr\n  useEffect(() => {\n    setFiltUsedInv([...props.usedInv]);\n  }, [props.usedInv]);\n\n  // Use Effect to filter through newInv and set inv to state if year make or model changes\n  useEffect(() => {\n    const filteredUsedInventory = props.usedInv.filter((inv) => {\n      if (\n        inv.year.includes(searchUsedState.used_year) &&\n        inv.make.includes(searchUsedState.used_make) &&\n        inv.model.includes(searchUsedState.used_model)\n      ) {\n        return inv;\n      }\n    });\n    setFiltUsedInv([...filteredUsedInventory]);\n  }, [\n    searchUsedState.used_year,\n    searchUsedState.used_make,\n    searchUsedState.used_model,\n  ]);\n\n  // on click for new inventory\n  const handleNewInventoryAdd = (e) => {\n    setShowNewInventoryModal(true);\n    setNewInventoryAdd({ ...newInventoryAdd, [e.target.name]: e.target.value });\n  };\n\n  // on click for used inventory\n  const handleUsedInventoryAdd = (e) => {\n    setShowUsedInventoryModal(true);\n    setUsedInventoryAdd({\n      ...usedInventoryAdd,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handleChange for usedInv picture\n  const handleUsedInventoryPicture = (e) => {\n    setUsedInventoryAdd({ car_picture: e.target.files[0] });\n  };\n\n  // handlechange for newInv picture\n  const handleNewInventoryPicture = (e) => {\n    setNewInventoryAdd({ car_picture: e.target.files[0] });\n  };\n\n  // handle Submit for Used Inv form\n  const handleUsedInventorySubmit = (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"car_picture\", usedInventoryAdd.car_picture);\n    formData.append(\"upload_preset\", \"darwin\");\n    props.addImage(formData, usedInventoryAdd);\n    inv_add_sound.play();\n    setUsedInventoryAdd({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\",\n    });\n  };\n\n  // delete Used Inventory\n  const deleteUsedInventory = (invId, imageId) => {\n    props.deleteUsedInv(invId, imageId);\n    inv_delete_sound.play();\n  };\n\n  // delete Used Inventory\n  const deleteNewInventory = (invId, imageId) => {\n    props.deleteNewInv(invId, imageId);\n    inv_delete_sound.play();\n    setSearchState({ new_year: \"\", new_make: \"\", new_model: \"\" });\n  };\n\n  // handleSubmit for New Inv Form\n  const handleNewInventorySubmit = (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"car_picture\", newInventoryAdd.car_picture);\n    formData.append(\"upload_preset\", \"darwin\");\n    props.addNewImage(formData, newInventoryAdd);\n    inv_add_sound.play();\n    setNewInventoryAdd({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\",\n    });\n  };\n\n  Howler.volume(0.5);\n\n  // Set inventory state to false\n  const [showUsedInventoryModal, setShowUsedInventoryModal] = useState(false);\n  const [showNewInventoryModal, setShowNewInventoryModal] = useState(false);\n\n  // handle used inventory close button\n  const handleUsedInventoryCloseButton = () => {\n    setShowUsedInventoryModal(false);\n    setUsedInventoryAdd({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\",\n    });\n  };\n\n  const handleNewInventoryCloseButton = () => {\n    setShowNewInventoryModal(false);\n    setNewInventoryAdd({\n      car_picture: \"\",\n      year: \"\",\n      make: \"\",\n      model: \"\",\n      price: \"\",\n      miles: \"\",\n      info: \"\",\n    });\n  };\n\n  useEffect(() => {\n    props.user === \"dealer\"\n      ? props.getUsedInventory() || props.getNewInventory()\n      : props.getUsedInventorySales() || props.getNewInventorySales();\n  }, [props.newInv.length]);\n\n  const visibleSlides = () => {\n    if (islaptopDesktop) {\n      return 3;\n    } else if (isDesktop) {\n      return 2;\n    } else if (isTabletorlargephone || isMobile) {\n      return 1;\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Auto Acuity | Inventory</title>\n      </Helmet>\n      {/* Used Inventory Modal to Add Inventory only for dealer */}\n      {showUsedInventoryModal ? (\n        <Portal>\n          <form\n            className=\"usedInventoryAddForm\"\n            onSubmit={handleUsedInventorySubmit}\n            encType={\"multipart/form-data\"}\n          >\n            <div className=\"usedInv-field\" id=\"picture_file\">\n              <input\n                type=\"file\"\n                id=\"car_picture\"\n                name=\"car_picture\"\n                className=\"usedInv-group\"\n                onChange={handleUsedInventoryPicture}\n              />\n              <label for=\"car_picture\">Upload file</label>\n              <span className=\"picture_url\">\n                {usedInventoryAdd.car_picture.name}\n              </span>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"year\"\n                name=\"year\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInventoryAdd.year}\n                onChange={handleUsedInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Year</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"make\"\n                name=\"make\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInventoryAdd.make}\n                onChange={handleUsedInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Make</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"model\"\n                name=\"model\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInventoryAdd.model}\n                onChange={handleUsedInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Model</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"price\"\n                name=\"price\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInventoryAdd.price}\n                onChange={handleUsedInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Price</span>\n              </label>\n            </div>\n\n            <div className=\"usedInv-field\">\n              <input\n                type=\"text\"\n                id=\"miles\"\n                name=\"miles\"\n                autoComplete=\"off\"\n                required\n                className=\"usedInv-group\"\n                value={usedInventoryAdd.miles}\n                onChange={handleUsedInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"usedInv-label-name\">\n                <span className=\"usedInv-content-name\">Miles</span>\n              </label>\n            </div>\n\n            <textarea\n              onChange={handleUsedInventoryAdd}\n              name=\"info\"\n              value={usedInventoryAdd.info}\n            ></textarea>\n\n            <div className=\"used-inv-add-btn-group\">\n              <Link\n                className=\"usedInv-closeBtn\"\n                onClick={handleUsedInventoryCloseButton}\n                to={\n                  props.user === \"salesman\"\n                    ? \"/sales/dash\"\n                    : \"/dealer/inventory\"\n                }\n              >\n                Close\n              </Link>\n\n              <button className=\"usedInv-submitBtn\">Submit</button>\n            </div>\n          </form>\n        </Portal>\n      ) : null}\n      {/* New Inventory Modal to add New Inventory only for dealer */}\n      {showNewInventoryModal ? (\n        <Portal>\n          <form\n            className=\"newInventoryAddForm\"\n            onSubmit={handleNewInventorySubmit}\n          >\n            <div className=\"newInv-field\" id=\"picture_file\">\n              <input\n                type=\"file\"\n                id=\"car_picture\"\n                name=\"car_picture\"\n                className=\"newInv-group\"\n                encType={\"multipart/form-data\"}\n                onChange={handleNewInventoryPicture}\n              />\n              <label htmlFor=\"car_picture\">Upload file</label>\n              <span className=\"picture_url\">\n                {newInventoryAdd.car_picture.name}\n              </span>\n            </div>\n\n            <div className=\"newInv-field\">\n              <input\n                type=\"text\"\n                id=\"year\"\n                name=\"year\"\n                autoComplete=\"off\"\n                required\n                className=\"newInv-group\"\n                value={newInventoryAdd.year}\n                onChange={handleNewInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"newInv-label-name\">\n                <span className=\"newInv-content-name\">Year</span>\n              </label>\n            </div>\n\n            <div className=\"newInv-field\">\n              <input\n                type=\"text\"\n                id=\"make\"\n                name=\"make\"\n                autoComplete=\"off\"\n                required\n                className=\"newInv-group\"\n                value={newInventoryAdd.make}\n                onChange={handleNewInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"newInv-label-name\">\n                <span className=\"newInv-content-name\">Make</span>\n              </label>\n            </div>\n\n            <div className=\"newInv-field\">\n              <input\n                type=\"text\"\n                id=\"model\"\n                name=\"model\"\n                autoComplete=\"off\"\n                required\n                className=\"newInv-group\"\n                value={newInventoryAdd.model}\n                onChange={handleNewInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"newInv-label-name\">\n                <span className=\"newInv-content-name\">Model</span>\n              </label>\n            </div>\n\n            <div className=\"newInv-field\">\n              <input\n                type=\"text\"\n                id=\"price\"\n                name=\"price\"\n                autoComplete=\"off\"\n                required\n                className=\"newInv-group\"\n                value={newInventoryAdd.price}\n                onChange={handleNewInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"newInv-label-name\">\n                <span className=\"newInv-content-name\">Price</span>\n              </label>\n            </div>\n\n            <div className=\"newInv-field\">\n              <input\n                type=\"text\"\n                id=\"miles\"\n                name=\"miles\"\n                autoComplete=\"off\"\n                required\n                className=\"newInv-group\"\n                value={newInventoryAdd.miles}\n                onChange={handleNewInventoryAdd}\n              />\n              <label htmlFor=\"inputField\" className=\"newInv-label-name\">\n                <span className=\"newInv-content-name\">Miles</span>\n              </label>\n            </div>\n\n            <textarea\n              onChange={handleNewInventoryAdd}\n              name=\"info\"\n              value={newInventoryAdd.info}\n            />\n\n            <div className=\"new-inv-add-btn-group\">\n              <Link\n                className=\"newInv-closeBtn\"\n                onClick={handleNewInventoryCloseButton}\n                to={\n                  props.user === \"salesman\"\n                    ? \"/sales/dash\"\n                    : \"/dealer/inventory\"\n                }\n              >\n                Close\n              </Link>\n\n              <button className=\"newInv-submitBtn\">Submit</button>\n            </div>\n          </form>\n        </Portal>\n      ) : null}\n      {/* Begins actual Inventory Page */}\n      <div>\n        {/* New Inventory */}\n\n        <div className=\"new--inventory\">\n          <h3 className=\"new--inventory__title\">New Inventory</h3>\n          {/* User === Dealer && New Inventory Length >= 1 show add button */}\n          {props.user === \"dealer\" && props.newInv.length >= 1 ? (\n            <Link\n              onClick={handleNewInventoryAdd}\n              to=\"/dealer/inventory/newInventory\"\n              className=\"new--inventory__addBtn\"\n            >\n              <span className=\"usedInventoryAddLink\">Add </span>{\" \"}\n            </Link>\n          ) : null}\n          {/* End Of Logic For New Inventory Add Button */}\n\n          {/* New Inventory Search form for dealers and salesman */}\n          <div className=\"new--inventory__form\">\n            <form className=\"new--inventory__fields form\">\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"new_year\"\n                  id=\"new_year\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={searchState.new_year}\n                  onChange={(e) => handleSearchChange(e)}\n                />\n                <label htmlFor=\"inputField\" className=\"label-name\">\n                  <span className=\"content-name\">Year</span>\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"new_make\"\n                  id=\"new_make\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={searchState.new_make}\n                  onChange={(e) => handleSearchChange(e)}\n                />\n                <label htmlFor=\"inputField\" className=\"label-name\">\n                  <span className=\"content-name\">Make</span>\n                </label>\n              </div>\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"new_model\"\n                  id=\"new_model\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={searchState.new_model}\n                  onChange={(e) => handleSearchChange(e)}\n                />\n                <label htmlFor=\"inputField\" className=\"label-name\">\n                  <span className=\"content-name\">Model</span>\n                </label>\n              </div>\n            </form>\n          </div>\n          {/* End of code for new inv search fields for dealers and salesmans */}\n\n          {props.user === \"dealer\" ? (\n            props.newInv.length === 0 ? (\n              <div className=\"new--inventory__results\">\n                <h3>\n                  No New Inventory, Click{\" \"}\n                  <Link\n                    onClick={handleNewInventoryAdd}\n                    to=\"/dealer/inventory/NewInventory\"\n                  >\n                    <span className=\"newInventoryAddLink\">Here</span>{\" \"}\n                  </Link>\n                  To Add{\" \"}\n                  <span role=\"img\" aria-label=\"crying\">\n                    😢\n                  </span>\n                </h3>\n              </div>\n            ) : (\n              <>\n                <CarouselProvider\n                  naturalSlideWidth={100}\n                  naturalSlideHeight={100}\n                  totalSlides={props.newInv.length}\n                  orientation=\"horizontal\"\n                  visibleSlides={visibleSlides()}\n                  dragEnabled={false}\n                  touchEnabled={true}\n                  style={{ position: \"relative\" }}\n                >\n                  <Slider\n                    style={{ marginTop: \"3rem\" }}\n                    className={isDesktop ? \"slider-margin-left\" : null}\n                  >\n                    {searchState.new_year === \"\" &&\n                    searchState.new_make === \"\" &&\n                    searchState.new_model === \"\"\n                      ? props.newInv.map((inv, idx) => {\n                          return (\n                            <React.Fragment key={idx}>\n                              <DealerNewInvSingle\n                                inv={inv}\n                                idx={idx}\n                                deleteNewInv={deleteNewInventory}\n                                classes={classes}\n                                props={props}\n                              />\n                            </React.Fragment>\n                          );\n                        })\n                      : filtNewInv.map((inv, idx) => {\n                          return (\n                            <React.Fragment key={idx}>\n                              <DealerNewInvSingle\n                                inv={inv}\n                                idx={idx}\n                                deleteNewInv={deleteNewInventory}\n                                classes={classes}\n                                props={props}\n                              />\n                            </React.Fragment>\n                          );\n                        })}\n                  </Slider>\n                  {props.newInv.length > 4 || islaptopDesktop ? (\n                    <ButtonBack className=\"slide_backBtn\">&lt;</ButtonBack>\n                  ) : null}\n                  {props.newInv.length > 4 || islaptopDesktop ? (\n                    <ButtonNext className=\"slide_nextBtn\">&gt;</ButtonNext>\n                  ) : null}\n                </CarouselProvider>\n              </>\n            )\n          ) : props.sales_newInv.length === 0 ? (\n            <div className=\"new--inventory__results\">\n              <h3>\n                Dealer Has No Inventory{\" \"}\n                <span role=\"img\" aria-label=\"crying\">\n                  😢\n                </span>\n              </h3>\n            </div>\n          ) : (\n            <>\n              <CarouselProvider\n                naturalSlideWidth={100}\n                naturalSlideHeight={100}\n                totalSlides={props.sales_newInv.length}\n                orientation=\"horizontal\"\n                visibleSlides={visibleSlides()}\n                dragEnabled={false}\n                touchEnabled={true}\n                style={{ position: \"relative\" }}\n              >\n                <Slider\n                  style={{ marginTop: \"3rem\" }}\n                  className={isDesktop ? \"slider-margin-left\" : null}\n                >\n                  {searchState.new_year === \"\" &&\n                  searchState.new_make === \"\" &&\n                  searchState.new_model === \"\"\n                    ? props.sales_newInv &&\n                      props.sales_newInv.map((inv, idx) => {\n                        return (\n                          <Slide key={idx}>\n                            <Card key={idx} className={classes.root}>\n                              <CardActionArea>\n                                <CardMedia\n                                  className={classes.media}\n                                  image={inv.car_picture}\n                                  title={inv.make + \" \" + inv.model}\n                                />\n                                <CardContent>\n                                  <Typography\n                                    gutterBottom\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                  >\n                                    {inv.year} {inv.make} {inv.model}\n                                  </Typography>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                  >\n                                    {inv.info}\n                                  </Typography>\n                                </CardContent>\n                              </CardActionArea>\n                            </Card>\n                          </Slide>\n                        );\n                      })\n                    : filtSalesNewInv.map((inv, idx) => {\n                        return (\n                          <Slide key={idx}>\n                            <Card key={idx} className={classes.root}>\n                              <CardActionArea>\n                                <CardMedia\n                                  className={classes.media}\n                                  image={inv.car_picture}\n                                  title={inv.make + \" \" + inv.model}\n                                />\n                                <CardContent>\n                                  <Typography\n                                    gutterBottom\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                  >\n                                    {inv.year} {inv.make} {inv.model}\n                                  </Typography>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                  >\n                                    {inv.info}\n                                  </Typography>\n                                </CardContent>\n                              </CardActionArea>\n                            </Card>\n                          </Slide>\n                        );\n                      })}\n                </Slider>\n                {props.sales_newInv.length > 4 && islaptopDesktop ? (\n                  <ButtonBack className=\"slide_backBtn\">&lt;</ButtonBack>\n                ) : null}\n                {props.sales_newInv.length > 4 && islaptopDesktop ? (\n                  <ButtonNext className=\"slide_nextBtn\">&gt;</ButtonNext>\n                ) : null}\n              </CarouselProvider>\n            </>\n          )}\n        </div>\n\n        {/* Used Inventory */}\n\n        <div className=\"used--inventory\">\n          <h3 className=\"used--inventory__title\">Used Inventory</h3>\n          {/* User === Salesman && Used Inventory Length >= 1 show add button */}\n          {props.user === \"dealer\" && props.usedInv.length >= 1 ? (\n            <Link\n              onClick={handleUsedInventoryAdd}\n              to=\"/dealer/inventory/UsedInventory\"\n              className=\"used--inventory__addBtn\"\n            >\n              <span className=\"usedInventoryAddLink\">Add </span>{\" \"}\n            </Link>\n          ) : null}\n\n          {/* End Of Logic For New Inventory Add Button */}\n\n          {/* New Inventory Search form for dealers and salesman */}\n          <div className=\"used--inventory__form\">\n            <form className=\"used-inventory__fields form\">\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"used_year\"\n                  id=\"used_year\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={searchUsedState.used_year}\n                  onChange={(e) => handleUsedSearchChange(e)}\n                />\n                <label htmlFor=\"inputField\" className=\"label-name\">\n                  <span className=\"content-name\">Year</span>\n                </label>\n              </div>\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"used_make\"\n                  id=\"used_make\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={searchUsedState.used_make}\n                  onChange={(e) => handleUsedSearchChange(e)}\n                />\n                <label htmlFor=\"inputField\" className=\"label-name\">\n                  <span className=\"content-name\">Make</span>\n                </label>\n              </div>\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"used_model\"\n                  id=\"used_model\"\n                  autoComplete=\"off\"\n                  required\n                  className=\"input-group\"\n                  value={searchUsedState.used_model}\n                  onChange={(e) => handleUsedSearchChange(e)}\n                />\n                <label htmlFor=\"inputField\" className=\"label-name\">\n                  <span className=\"content-name\">Model</span>\n                </label>\n              </div>\n            </form>\n          </div>\n          {/* End of code for used inv search fields for dealers and salesmans */}\n\n          {props.user === \"dealer\" ? (\n            props.usedInv.length === 0 ? (\n              <div className=\"used--inventory__results\">\n                <h3>\n                  No Used Inventory, Click{\" \"}\n                  <Link\n                    onClick={handleUsedInventoryAdd}\n                    to=\"/dealer/inventory/UsedInventory\"\n                  >\n                    <span className=\"usedInventoryAddLink\"> Here </span>{\" \"}\n                  </Link>\n                  To Add{\" \"}\n                  <span role=\"img\" aria-label=\"crying\">\n                    😢\n                  </span>\n                </h3>\n              </div>\n            ) : (\n              <>\n                <CarouselProvider\n                  naturalSlideWidth={100}\n                  naturalSlideHeight={100}\n                  totalSlides={props.usedInv.length}\n                  orientation=\"horizontal\"\n                  visibleSlides={visibleSlides()}\n                  dragEnabled={false}\n                  touchEnabled={true}\n                  style={{ position: \"relative\" }}\n                >\n                  <Slider\n                    style={{ marginTop: \"3rem\" }}\n                    className={isDesktop ? \"slider-margin-left\" : null}\n                  >\n                    {searchUsedState.used_year === \"\" &&\n                    searchUsedState.used_make === \"\" &&\n                    searchUsedState.used_model === \"\"\n                      ? props.usedInv.map((inv, idx) => {\n                          return (\n                            <React.Fragment key={idx}>\n                              <DealerUsedInvSingle\n                                inv={inv}\n                                idx={idx}\n                                deleteUsedInventory={deleteUsedInventory}\n                                classes={classes}\n                                props={props}\n                              />\n                            </React.Fragment>\n                          );\n                        })\n                      : filtUsedInv.map((inv, idx) => {\n                          return (\n                            <React.Fragment key={idx}>\n                              <DealerUsedInvSingle\n                                inv={inv}\n                                idx={idx}\n                                deleteUsedInventory={deleteUsedInventory}\n                                classes={classes}\n                                props={props}\n                              />\n                            </React.Fragment>\n                          );\n                        })}\n                  </Slider>\n                  {props.usedInv.length > 4 || islaptopDesktop ? (\n                    <ButtonBack className=\"slide_backBtn\">&lt;</ButtonBack>\n                  ) : null}\n                  {props.usedInv.length > 4 || islaptopDesktop ? (\n                    <ButtonNext className=\"slide_nextBtn\">&gt;</ButtonNext>\n                  ) : null}\n                </CarouselProvider>\n              </>\n            )\n          ) : props.sales_usedInv.length === 0 ? (\n            <div className=\"used--inventory__results\">\n              <h3>\n                Dealer Has No Inventory{\" \"}\n                <span role=\"img\" aria-label=\"crying\">\n                  😢\n                </span>\n              </h3>\n            </div>\n          ) : (\n            <>\n              <CarouselProvider\n                naturalSlideWidth={100}\n                naturalSlideHeight={100}\n                totalSlides={props.sales_usedInv.length}\n                orientation=\"horizontal\"\n                visibleSlides={visibleSlides()}\n                dragEnabled={false}\n                touchEnabled={true}\n                style={{ position: \"relative\" }}\n              >\n                <Slider\n                  style={{ marginTop: \"3rem\" }}\n                  className={isDesktop ? \"slider-margin-left\" : null}\n                >\n                  {searchUsedState.used_year === \"\" &&\n                  searchUsedState.used_make === \"\" &&\n                  searchUsedState.used_model === \"\"\n                    ? props.sales_usedInv &&\n                      props.sales_usedInv.map((inv, idx) => {\n                        return (\n                          <Slide index={idx} key={idx}>\n                            <Card key={idx} className={classes.root}>\n                              <CardActionArea>\n                                <CardMedia\n                                  className={classes.media}\n                                  image={inv.car_picture}\n                                  title={inv.make + \" \" + inv.model}\n                                />\n                                <CardContent>\n                                  <Typography\n                                    gutterBottom\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                  >\n                                    {inv.year} {inv.make} {inv.model}\n                                  </Typography>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                  >\n                                    {inv.info}\n                                  </Typography>\n                                </CardContent>\n                              </CardActionArea>\n                            </Card>\n                          </Slide>\n                        );\n                      })\n                    : filtSalesUsedInv.map((inv, idx) => {\n                        return (\n                          <Slide index={idx} key={idx}>\n                            <Card key={idx} className={classes.root}>\n                              <CardActionArea>\n                                <CardMedia\n                                  className={classes.media}\n                                  image={inv.car_picture}\n                                  title={inv.make + \" \" + inv.model}\n                                />\n                                <CardContent>\n                                  <Typography\n                                    gutterBottom\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                  >\n                                    {inv.year} {inv.make} {inv.model}\n                                  </Typography>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                  >\n                                    {inv.info}\n                                  </Typography>\n                                </CardContent>\n                              </CardActionArea>\n                            </Card>\n                          </Slide>\n                        );\n                      })}\n                </Slider>\n                {props.sales_usedInv.length > 4 && islaptopDesktop ? (\n                  <ButtonBack className=\"slide_backBtn\">&lt;</ButtonBack>\n                ) : null}\n                {props.sales_usedInv.length > 4 && islaptopDesktop ? (\n                  <ButtonNext className=\"slide_nextBtn\">&gt;</ButtonNext>\n                ) : null}\n              </CarouselProvider>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    newInv: state.newInventoryReducer.newInventory || [],\n    usedInv: state.usedInventoryReducer.inventory || [],\n    sales_newInv: state.getSalesNewInventoryReducer.salesNewInventory || [],\n    sales_usedInv: state.getSalesUsedInventoryReducer.salesUsedInventory || [],\n    user: state.userReducer.user,\n    loading: state.imageReducer.loading,\n    //value: state.newInventoryReducer.newInventory,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addImage,\n  addNewImage,\n  getUsedInventory,\n  getNewInventory,\n  deleteUsedInv,\n  deleteNewInv,\n  getNewInventorySales,\n  getUsedInventorySales,\n  editNewInventory,\n  editUsedInventory,\n})(React.memo(DealerInventoryMain));\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst portalRoot = document.getElementById(\"portal\");\n\nclass Portal extends Component {\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  };\n\n  componentWillUnMount = () => {\n    portalRoot.removeChild(this.el);\n  };\n\n  render() {\n    return ReactDOM.createPortal(\n      <div\n        className=\"portal-styles\"\n        style={{\n          position: \"fixed\",\n          top: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          right: \"0\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"rgba(0,0,0,0.6)\"\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el\n    );\n  }\n}\n\nexport default React.memo(Portal);\n","module.exports = __webpack_public_path__ + \"static/media/deletesound.06f599b9.mp3\";"],"sourceRoot":""}